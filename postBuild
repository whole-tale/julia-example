JULIA_PATH=/srv/julia
JULIA_HOME=${JULIA_PATH}/bin
JULIA_BINDIR=${JULIA_HOME}
JULIA_PKGDIR=${JULIA_PATH}/pkg
JULIA_DEPOT_PATH=${JULIA_PKGDIR}
JULIA_VERSION=1.8.2

mkdir -p ${JULIA_PATH}
curl -sSL "https://julialang-s3.julialang.org/bin/linux/x64/${JULIA_VERSION%[.-]*}/julia-${JULIA_VERSION}-linux-x86_64.tar.gz" | tar -xz -C ${JULIA_PATH} --strip-components 1
                
export PATH=${PATH}:${JULIA_BINDIR}
mkdir -p ${JULIA_PKGDIR}
chown ${NB_USER}:${NB_USER} ${JULIA_PKGDIR}

julia -e 'if (VERSION > v"0.7-") using Pkg; else Pkg.init(); end; Pkg.add("IJulia"); using IJulia;'

mv ${HOME}/.local/share/jupyter/kernels/julia-${JULIA_VERSION%[.-]*} ${NB_PYTHON_PREFIX}/share/jupyter/kernels/julia-${JULIA_VERSION%[.-]*}
                
#ln -s /etc/ssl/certs/ca-certificates.crt /srv/conda/envs/notebook/share/julia/cert.pem
julia -e "using Pkg; Pkg.add(\"IJulia\"); using IJulia; installkernel(\"Julia\", \"--project=${REPO_DIR}\");"
julia --project=${REPO_DIR} -e 'using Pkg; Pkg.instantiate(); Pkg.resolve(); pkg"precompile"'
